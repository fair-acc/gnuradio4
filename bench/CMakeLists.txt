function(append_compiler_flags TARGET_NAME)
    set(FLAGS_COMMON -Wall)
    if (EMSCRIPTEN)
        set(FLAGS_SPECIAL "")
    else ()
        set(FLAGS_SPECIAL -march=native)
    endif ()

    target_compile_options(${TARGET_NAME} PRIVATE ${FLAGS_COMMON} ${FLAGS_SPECIAL})
    target_link_options(${TARGET_NAME} PRIVATE ${FLAGS_COMMON} ${FLAGS_SPECIAL})
endfunction()

function(add_benchmark BM_NAME)
    add_executable(${BM_NAME} ${BM_NAME}.cpp)
    append_compiler_flags(${BM_NAME})
    target_link_libraries(${BM_NAME} PRIVATE graph-prototype-options graph-prototype refl-cpp fmt ut fftw)
endfunction()

add_benchmark(bm_buffer)
add_benchmark(bm_case0)
add_benchmark(bm_case1)
add_benchmark(bm_filter)
add_benchmark(bm_fft)
add_benchmark(bm_history_buffer)
add_benchmark(bm_profiler)
add_benchmark(bm_scheduler)

add_executable(bm_case1_nosimd bm_case1.cpp)
append_compiler_flags(bm_case1_nosimd)
target_compile_options(bm_case1_nosimd PRIVATE -DDISABLE_SIMD=1)
target_link_libraries(bm_case1_nosimd PRIVATE graph-prototype-options graph-prototype refl-cpp fmt ut)