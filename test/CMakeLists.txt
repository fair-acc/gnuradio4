set(TESTS_BINARY_PATH ${CMAKE_CURRENT_BINARY_DIR})
set(TESTS_SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR})

configure_file(build_configure.hpp.in build_configure.hpp @ONLY)

function(add_ut_test TEST_NAME)
    add_executable(${TEST_NAME} ${TEST_NAME}.cpp)
    if ((CMAKE_CXX_COMPILER_ID MATCHES ".*Clang"))
        target_compile_options(${TEST_NAME} PRIVATE -Wall)
        target_link_options(${TEST_NAME} PRIVATE -Wall)
    else ()
        target_compile_options(${TEST_NAME} PRIVATE -fsanitize=address -Wall)
        target_link_options(${TEST_NAME} PRIVATE -fsanitize=address -Wall)
    endif ()
    target_include_directories(${TEST_NAME} PRIVATE ${CMAKE_BINARY_DIR}/include ${CMAKE_CURRENT_BINARY_DIR})
    target_link_libraries(${TEST_NAME} PRIVATE graph-prototype-options graph-prototype fmt refl-cpp ut fftw)
    add_test(NAME ${TEST_NAME} COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} ${CMAKE_CURRENT_BINARY_DIR}/${TEST_NAME})
endfunction()

function(add_app_test TEST_NAME)
    add_executable(${TEST_NAME} ${TEST_NAME}.cpp)
    target_compile_options(${TEST_NAME} PRIVATE -fsanitize=address -Wall)
    target_include_directories(${TEST_NAME} PRIVATE ${CMAKE_BINARY_DIR}/include ${CMAKE_CURRENT_BINARY_DIR})
    target_link_options(${TEST_NAME} PRIVATE -fsanitize=address -Wall)
    target_link_libraries(${TEST_NAME} PRIVATE graph-prototype-options graph-prototype graph-prototype-plugin fmt refl-cpp fftw)
    add_dependencies(${TEST_NAME} good_math_plugin good_base_plugin bad_plugin)
    add_test(NAME ${TEST_NAME} COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} ${CMAKE_CURRENT_BINARY_DIR}/${TEST_NAME})
endfunction()

add_ut_test(qa_buffer)
add_ut_test(qa_data_sink)
add_ut_test(qa_decimator)
add_ut_test(qa_dynamic_node)
add_ut_test(qa_dynamic_port)
add_ut_test(qa_fft)
add_ut_test(qa_filter)
add_ut_test(qa_hier_node)
add_ut_test(qa_scheduler)
add_ut_test(qa_settings)
add_ut_test(qa_tags)
add_ut_test(qa_thread_affinity)
add_ut_test(qa_thread_pool)


if (NOT EMSCRIPTEN)
    add_subdirectory(plugins)

    if (NOT (CMAKE_CXX_COMPILER_ID MATCHES ".*Clang"))
        # Clang has issues with ut, app_plugins_test (the target below) tests
        # the plugin system without ut
        add_ut_test(qa_plugins_test)
        target_link_libraries(qa_plugins_test PRIVATE graph-prototype-plugin)
        add_dependencies(qa_plugins_test good_math_plugin good_base_plugin bad_plugin)
    endif ()

    add_app_test(app_plugins_test app_plugins_test.cpp)

    add_app_test(app_grc)
    target_link_libraries(app_grc PRIVATE yaml-cpp::yaml-cpp)
endif ()
